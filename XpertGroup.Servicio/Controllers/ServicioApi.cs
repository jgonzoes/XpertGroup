/*
 * XpertGroup Prueba
 *
 * Este es el api que se podra consumir desde la aplicacion 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: jgonzoe@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using IO.Swagger.Attributes;
using IO.Swagger.Models;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using System;
using System.Collections.Generic;
using Twilio.Exceptions;
using XPertGroup.Negocio.BL;
using XPertGroup.Negocio.BO;
using XpertGroupIC.Constntes;
using XpertGroupIC.Extensiones;

namespace IO.Swagger.Controllers
{
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ServicioApiController : ControllerBase
    {
        private readonly Lazy<OperacionBL> _operacionBL;

        /// <summary>
        /// Constructor de la clase para instaciar peresozamente los objetos
        /// </summary>
        public ServicioApiController()
        {
            _operacionBL = new Lazy<OperacionBL>();
        }
        /// <summary>
        /// envie los requerimientos del servicio expuesta
        /// </summary>

        /// <param name="body">Todos los parametros requeridos para enviar el servicio</param>
        /// <response code="405">Invalid input</response>
        [HttpPost]
        [Route("/xpertGroup/solicitud")]
        [ValidateModelState]
        [SwaggerOperation("CrearSolicitud")]
        public virtual ActionResult<List<long>> CrearSolicitud([FromBody]Solicitud body)
        {
            SolicitudBO _solicitudBO = new SolicitudBO();
            _solicitudBO = MapearModel(body);

            var respuesta = _operacionBL.Value.CrearSolicitud(_solicitudBO);

            if (respuesta == null) throw new ApiException(400, 0, Constantes.ERROR_VALIDACION, null);

            return respuesta;
        }

        private SolicitudBO MapearModel(Solicitud body)
        {
            SolicitudBO _solicitudBO = new SolicitudBO();
            _solicitudBO.T = body.T;

            foreach (var item in body.Atributo)
            {
                AtributoBO _atributoBO = new AtributoBO();
                _atributoBO.M = item.M;
                _atributoBO.N = item.N;
                foreach (var operacion in item.Operaciones)
                {
                    OperacionesBO _operacionesBO = new OperacionesBO();
                    _operacionesBO.Operacion = operacion._Operacion;
                    _atributoBO.Operaciones.Add(_operacionesBO);
                }
                _solicitudBO.AtributoBO.Add(_atributoBO);
            }

            return _solicitudBO;
        }
    }
}
